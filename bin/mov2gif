#!/usr/bin/env bash

if [ -z "$1" ]; then
  echo "Usage: mov2gif file"
else
  rm -rf /tmp/movie
  mkdir /tmp/movie
  ffmpeg -i $1 -vf scale=640:-1 -r 3 /tmp/movie/ffout%3d.png &&
  convert -coalesce -layers optimize -delay 20 -loop 0 /tmp/movie/ffout*.png $1.gif &&
  open $1.gif
fi


#!/usr/bin/env ruby
# $stdout.sync = true

# ln -s ~/workspace/dotfiles/bin/mov2gif /usr/local/bin

# https://gist.github.com/pusewicz/7590942

# =begin
# DEPENDENCIES:
# $ brew install ffmpeg
# $ brew install imagemagick
# =end

# require 'optparse'
# require 'fileutils'
# require 'tmpdir'

# VERSION = "0.1"

# options = {
  # fps: 15,
  # loop: true
# }

# OptionParser.new do |opts|
  # opts.banner = "Usage: #{opts.program_name} file.mov file.gif [options]"
  # opts.on('-v', '--version') do
    # puts "#{opts.program_name} v#{VERSION}"
    # exit
  # end

  # opts.on('--fps N', Integer, "Set N frames per second (default: #{options[:fps]})") do |fps|
    # options[:fps] = fps
  # end

  # opts.on('-l', '--[no-]loop', "Turn looping on or off (default: #{options[:loop]})") do |lp|
    # options[:loop] = lp
  # end
# end.parse!

# mov_file = File.expand_path(ARGV[0])
# gif_file = File.expand_path(ARGV[1] || "#{ARGV[0]}.gif")

# abort "Please specify both mov and gif file" unless File.exist?(mov_file) && gif_file

# puts "Processing: #{mov_file} -> #{gif_file}, #{options.inspect}"

# temp_dir = Dir.mktmpdir(File.basename($0))
# temp_template = File.join(temp_dir, '%5d.png')

# convert_to_png = [
  # 'ffmpeg',
  # '-loglevel',
  # 'quiet',
  # '-i',
  # mov_file,
  # '-r',
  # options[:fps].to_s,
  # temp_template
# ]

# puts "Executing #{convert_to_png.join(' ')}"
# Process.waitpid spawn(*convert_to_png)

# convert_to_gif = [
  # 'convert',
  # '-loop',
  # options[:loop] ? '0' : '1',
  # '-delay',
  # "1x#{options[:fps]}",
  # File.join(temp_dir, '*.png'),
  # gif_file
# ]

# puts "Executing #{convert_to_gif.join(' ')}"
# Process.waitpid spawn(*convert_to_gif)

# FileUtils.rm_rf(temp_dir)