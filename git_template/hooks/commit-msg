#!/usr/bin/env ruby

msg_file   = ARGV[0]
commit_msg = File.read(msg_file).to_s.strip

def empty_commit?(commit_msg)
  return true if commit_msg.empty?

  commit_msg.split("\n").each do |line|
    # Lines starting with '#' will be ignored
    return false if commit_msg.strip[0] != '#'
  end

  true
end

# if the commit was canceled (no message)
exit 0 if empty_commit?(commit_msg)

branch_name = `git rev-parse --abbrev-ref HEAD`.to_s

# remove line break added by the system call above
branch_name.chomp!

# remove git flow branch prefixes
branch_name.gsub!('feature/',  '')
branch_name.gsub!('hotfix/',   '')

# skip when develop or master branches
# or when the branch name is already in the beginning of the commit msg
if %w[develop master].include?(branch_name) || commit_msg.start_with?(branch_name)
  exit 0
end

# add the branch prefix following the Jira convention
# https://confluence.atlassian.com/display/AOD/Processing+JIRA+issues+with+commit+messages
commit_msg = "#{branch_name} #{commit_msg}"

# update the commit msg with the branch name
File.open(msg_file, 'w') { |f| f.write commit_msg }